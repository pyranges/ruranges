name: Build and Publish Python package (Maturin)

on:
  # Trigger on manual dispatch or when pushing a tag (e.g. v1.0.0).
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build wheels (and sdist)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        # Installs the latest stable Rust.

      - name: Ensure Cargo.lock is present
        run: |
          if [ ! -f Cargo.lock ]; then
            echo "Error: Cargo.lock not found. Please commit Cargo.lock to the repo for reproducible builds."
            exit 1
          fi
        shell: bash

      - name: Build wheels (Linux + sdist)
        if: runner.os == 'Linux'
        uses: PyO3/maturin-action@v1
        with:
          command: build
          manylinux: '2014'
          args: '--release --sdist --out dist'

      - name: Build wheels (macOS, Windows)
        if: runner.os != 'Linux'
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: '--release --out dist'

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: dist/

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download artifacts (Linux wheels & sdist)
        uses: actions/download-artifact@v4
        with:
          name: dist-ubuntu-latest
          path: dist

      - name: Download artifacts (macOS wheels)
        uses: actions/download-artifact@v4
        with:
          name: dist-macos-latest
          path: dist

      - name: Download artifacts (Windows wheels)
        uses: actions/download-artifact@v4
        with:
          name: dist-windows-latest
          path: dist

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.14
        with:
          user: ${{ secrets.PYPI_USER }}
          password: ${{ secrets.PYPI_PROD_PASSWORD }}

