name: Build and Publish Wheels

on:
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Set up QEMU (for ARM64 emulation)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "linux/arm64/v8"

      - name: Install build tools (Maturin & cibuildwheel)
        run: |
          python -m pip install --upgrade pip
          python -m pip install maturin cibuildwheel

      - name: Build wheels (ManyLinux 2_28 for x86_64 & aarch64)
        env:
          CIBW_ARCHS: "x86_64 aarch64"
          CIBW_BUILD: "cp312-* cp313-*"
          CIBW_SKIP: "pp* *-musllinux_*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
          CIBW_BEFORE_ALL_LINUX: dnf install -y cargo rustc
        run: python -m cibuildwheel --platform linux --output-dir dist

      - name: Upload Linux wheels
        uses: actions/upload-artifact@v3
        with:
          name: linux-wheels
          path: dist

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install build tools (Maturin & cibuildwheel)
        run: |
          python -m pip install --upgrade pip
          python -m pip install maturin cibuildwheel

      - name: Build wheels for macOS (x86_64 & arm64)
        env:
          CIBW_ARCHS: "x86_64 arm64"
          CIBW_BUILD: "cp312-* cp313-*"
          CIBW_SKIP: "pp*"
          # Install Rust via Homebrew if needed for the build
          CIBW_BEFORE_ALL: brew install rust
        run: python -m cibuildwheel --platform macos --output-dir dist

      - name: Upload macOS wheels
        uses: actions/upload-artifact@v3
        with:
          name: macos-wheels
          path: dist

  publish:
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux wheels
        uses: actions/download-artifact@v3
        with:
          name: linux-wheels
          path: dist/linux
      - name: Download macOS wheels
        uses: actions/download-artifact@v3
        with:
          name: macos-wheels
          path: dist/macos
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages: "dist/**/*.whl dist/**/*.tar.gz"

