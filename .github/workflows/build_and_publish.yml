name: Build and Publish Wheels

on:
  workflow_dispatch:
  push:
    tags: "v*.*.*"  # or e.g. "v*.*.*" to match semver tags
  # workflow_dispatch:  # Uncomment if you want manual runs from the Actions tab

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.12, 3.13]
      fail-fast: false  # Let all builds run, even if one fails
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install openssl@1.1

      - name: Install Dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install -y strawberryperl nasm

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release
          manylinux: "2014"
          container: auto
          before-script-linux: |
            yum install -y perl-core openssl-devel

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts (Ubuntu py3.12)
        uses: actions/download-artifact@v4
        with:
          name: dist-ubuntu-latest-py3.12
          path: dist-ubuntu-py312

      - name: Download artifacts (Ubuntu py3.13)
        uses: actions/download-artifact@v4
        with:
          name: dist-ubuntu-latest-py3.13
          path: dist-ubuntu-py313

      - name: Download artifacts (macOS py3.12)
        uses: actions/download-artifact@v4
        with:
          name: dist-macos-latest-py3.12
          path: dist-macos-py312

      - name: Download artifacts (macOS py3.13)
        uses: actions/download-artifact@v4
        with:
          name: dist-macos-latest-py3.13
          path: dist-macos-py313

      - name: Download artifacts (Windows py3.12)
        uses: actions/download-artifact@v4
        with:
          name: dist-windows-latest-py3.12
          path: dist-windows-py312

      - name: Download artifacts (Windows py3.13)
        uses: actions/download-artifact@v4
        with:
          name: dist-windows-latest-py3.13
          path: dist-windows-py313

      - name: Combine artifacts
        run: |
          mkdir final-dists
          cp dist-ubuntu-py312/* final-dists || true
          cp dist-ubuntu-py313/* final-dists || true
          cp dist-macos-py312/* final-dists || true
          cp dist-macos-py313/* final-dists || true
          cp dist-windows-py312/* final-dists || true
          cp dist-windows-py313/* final-dists || true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.14
        with:
          user: ${{ secrets.PYPI_USER }}
          password: ${{ secrets.PYPI_PROD_PASSWORD }}
          packages: "final-dists/*.whl final-dists/*.tar.gz"

